<?xml version="1.0"?>
<doc>
<assembly>
<name>
Qiqi.Reference
</name>
</assembly>
<members>
<member name="T:Qiqi.Reference._BibTeX.DataBase">
 <summary>
 Class DataBase represents a BibTeX database 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.DataBase.#ctor(System.String)">
 <summary>
 The constructor with parameter
 </summary>
 <param name="FileFullName">The full name of BibTeX file</param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.DataBase.DataBaseLoading(Qiqi.Reference._BibTeX.ErrorMessage@)">
 <summary>
 Read the BibTeX File, load the information into the paper list
 </summary>
 <returns>If successful, return True, else, return False</returns>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.DataBase.ExistWholeLiterature(System.String@)">
 <summary>
 Judge the existance of whole literature
 </summary>
 <param name="BibTeXBuffer">BibTeX buffer</param>
 <returns>If there is a whole literature, return True, else, return False</returns>
 <remarks></remarks>
</member>
<member name="T:Qiqi.Reference._BibTeX.LiteratureError">
 <summary>
 This modele is used to contain error message of LiteratureBuffer
 </summary>
 <remarks></remarks>
</member>
<member name="T:Qiqi.Reference._BibTeX.Literature">
 <summary>
 Class Literature represents a literature and its information about type, bibtexkey, etc.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.Literature.#ctor">
 <summary>
 The constructor without parameter
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.Literature.#ctor(System.String,System.String,System.String,Qiqi.Reference._BibTeX.ErrorMessage@)">
 <summary>
 The constructor with parameters
 </summary>
 <param name="Type">Type of </param>
 <param name="ID"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.Literature.LexicalAnalysis(System.String,Qiqi.Reference._BibTeX.ErrorMessage@)">
 <summary>
 Lexical analysis of literature buffer
 </summary>
 <param name="LiteratureBuffer">BibTeX of literature</param>
 <param name="ErrorMessage">If there exist error in LiteratureBuffer, write the error message in ErrorMessage</param>
 <returns>If there is no error, return True, else, return False</returns>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._BibTeX.Literature.GetPropertyValue(System.String)">
 <summary>
 Get the value according to the name
 </summary>
 <param name="Name">Property name</param>
 <returns>If there exist the name, return corresponding value, else, return empty string</returns>
 <remarks></remarks>
</member>
<member name="T:Qiqi.Reference._BibTeX.LiteratureProperty">
 <summary>
 Class PaperProperty represents class Literature's property 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.Qiqi.DataBase.GetDataBaseType">
 <summary>
 This function can get the type of the database according to the extension.
 If the FullFileName is not currect, the type is ErrorType
 If the FullFileName has no extension, the type is Unknown
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.#ctor(Qiqi.Reference._FormConfiguration.Configuration)">
 <summary>
 Constructor with parameter
 </summary>
 <param name="Configuration">Configuration</param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.InitializeToolStrip">
 <summary>
 Initialize ToolStrip
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.ToolStripButton_Click(System.Object,System.EventArgs)">
 <summary>
 If the button is pushed, select a corresponding sub to run
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.ToolStripTextBox_TextChanged(System.Object,System.EventArgs)">
 <summary>
 If the texts of three textbox is changed, set the enable of the button
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.InitializeListView">
 <summary>
 Initialize ListView
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.ListView_ItemSelectionChanged(System.Object,System.EventArgs)">
 <summary>
 If the selection of item is change, run this sub
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.ListView_DoubleClick(System.Object,System.EventArgs)">
 <summary>
 If item of listview is double clicked, enter the modify mode
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.GetConfiguration">
 <summary>
 Get the DataTable of this panel
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.DataBaseColumnDisplay.MainPanel.ListView_ItemChecked(System.Object,System.Windows.Forms.ItemCheckedEventArgs)">
 <summary>
 This event is used to fix the multiselect bug of list view
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox">
 <summary>
 This class is ComboBox with a head label.
 It can be used to let the user select a color.
 </summary>
</member>
<member name="P:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.SelectedColor">
 <summary>
 This property is the selected color of the ComboBox.
 When this property is assigned, the ComboBox's selected index will be changed.
 In this class, I used a integer to repesent a RGB color.
 </summary>
 <returns></returns>
</member>
<member name="P:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.Bold">
 <summary>
 This property is the value of the CheckBox.
 </summary>
 <returns></returns>
</member>
<member name="E:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.SelectedChanged">
 <summary>
 The following event will be triggered when the selected color of ComboBox is changed,
 or the checked value of the CheckBox is changed.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.#ctor(System.String,System.Int32)">
 <summary>
 Constructor.
 </summary>
 <param name="Text">The text of the label.</param>
 <param name="Width">The width of the whole panel.</param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.Me_MouseEnter">
 <summary>
 When mouse enters the panel, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.Label_MouseEnter">
 <summary>
 When mouse enters the label, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.CheckBox_MouseEnter">
 <summary>
 When mouse enters the CheckBox, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.ComboBox_MouseEnter">
 <summary>
 When mouse enters the ComboBox, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.ComboBox_SelectedIndexChanged">
 <summary>
 When mouse enters the panel, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontColorComboBox.CheckedChanged_CheckedChanged">
 <summary>
 When the checked value of the CheckBox is changed, this sub will be called.
 </summary>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.ColorPicker">
 <summary>
 This class is ComboBox to help user to pick a color.
 The characteristic of this class is that it can show the color block of each dropped item,
 </summary>
</member>
<member name="P:Qiqi.Reference._FormConfiguration.InterfaceFont.ColorPicker.SelectedItem">
 <summary>
 Gets or sets the currently selected item.
 </summary>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.FontFamilyComboBox">
 <summary>
 This class is ComboBox with a head label.
 It can be used to let the user select a font familty of a font.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontFamilyComboBox.#ctor(System.Int32)">
 <summary>
 Constructor.
 </summary>
 <param name="Width">The width of the whole panel.</param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontFamilyComboBox.FillComboBox">
 <summary>
 This sub is used to initialize the dropped items of the ComboBox.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontFamilyComboBox.ComboBox_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
 <summary>
 I override this sub to control the dropped items more freely.
 With this sub, the fonts of the dropped items can be different.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox">
 <summary>
 This class is a ComboBox with a head label and a tail label.
 It can be used to let the user select a number which is the size of a font.
 </summary>
</member>
<member name="P:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.SelectedText">
 <summary>
 This property is the text of the ComboBox.
 When this property is assigned, the ComboBox's selected index will be changed.
 </summary>
 <returns></returns>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.#ctor(System.Int32)">
 <summary>
 Constructor.
 </summary>
 <param name="Width">The width of the whole panel.</param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.Me_MouseEnter">
 <summary>
 When mouse enters the panel, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.Label_MouseEnter">
 <summary>
 When mouse enters the two labels, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.ComboBox_MouseEnter">
 <summary>
 When mouse enters the ComboBox, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.ComboBox_SelectedIndexChanged">
 <summary>
 When the selected index of ComboBox is changed, this sub will be called.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.ComboBox_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
 <summary>
 I override this sub to control the dropped items more freely.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FontSizeComboBox.FillComboBox">
 <summary>
 This sub is used to initialize the dropped items of the ComboBox.
 </summary>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.FormSeparator">
 <summary>
 This class is a label with a long tail.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.FormSeparator.#ctor(System.String,System.Int32,System.Int32)">
 <summary>
 Constructor.
 </summary>
 <param name="Text">The text of the Label.</param>
 <param name="Width">The width of the whole Label.</param>
 <param name="TopMargin">The top margin of the Label.</param>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel">
 <summary>
 This class is the panel of the interface font configuration.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.#ctor(Qiqi.Reference._FormConfiguration.Configuration)">
 <summary>
 This is the constructor.
 </summary>
 <param name="Configuration">All configuration of the whole software.</param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.InitializePreview">
 <summary>
 This sub is used to initialize the preview interface.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.OnResize(System.EventArgs)">
 <summary>
 Override the sub OnResize, when MainPanel's size is changed, this sub will be called.
 Because the FormConfiguration's size is fixed, so this sub just be called twice.
 This sub is firstly called when this MainPanel is created.
 This sub is secondly called when this MainPanel's size is set.
 The Function of this sub is to adjust the sizes of three cover panels.
 At the beginning, I just set the size, location, and the anchor of each cover panels after they are created.
 At this moment, the MainPanel's size is not set, so there are some bugs.
 So, I set the size, location, and the anchor of each cover panels when the MainPanel has been initialized.
 </summary>
 <param name="eventargs"></param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.InitializeInputComboBoxes">
 <summary>
 This sub is used to fill the input ComboBoxes in the MainPanel according to the configuration file.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.GetConfiguration">
 <summary>
 This function is used to convert the values of all ComboBoxes into a DataTable,
 which is easy to be saved.
 </summary>
 <returns>The DataTable which contains the values of all ComboBoxes.</returns>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.ConfigurationChanged(System.Object)">
 <summary>
 If any ComboBox's value is changed, this sub will be called.
 This sub is used to upadate the preview interface.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.InitializeTableLayoutPanel">
 <summary>
 This sub is used to initialize the TableLayoutPanel.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.InputControls_MouseEnter(System.Object,System.EventArgs)">
 <summary>
 When mouse enters any ComboxBox or Label in the TableLayoutPanel, this sub will be called.
 This sub set the Visible attributes of cover panels to emphasize the zones of the preview interface,
 according which control the mouse enters.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.AddHaddlerConfigurationChanged">
 <summary>
 This sub is used to bind the event SelectedChanged of all ComboBoxes to the sub ConfigurationChanged.
 </summary>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.MainPanel.RemoveHandlerConfigurationChanged">
 <summary>
 This sub is used to unbind the event SelectedChanged of all ComboBoxes from the sub ConfigurationChanged.
 </summary>
</member>
<member name="T:Qiqi.Reference._FormConfiguration.InterfaceFont.TransparentPanel">
 <summary>
 This class is a panel which is tansparent.
 This class is used to cover the other control, which should be click by mouse.
 Configurate the Enable attribute of a control to prevent it from being clicked is not ideal sometime,
 because if the Enable = False, the color of this control is gray.
 </summary>
</member>
<member name="P:Qiqi.Reference._FormConfiguration.InterfaceFont.TransparentPanel.CreateParams">
 <summary>
 CreateParams is a property of Control object.
 CreateParams is used to gets the required creation parameters when the control handle is created.
 In this class, we override the property CreateParams,
 and set the ExStyle = ExStyle Or 0x20 to make the background is trasparent.
 </summary>
 <returns></returns>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.TransparentPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
 <summary>
 We override the sub OnPaintBackground to prevent the background of this panel from being painted.
 </summary>
 <param name="e"></param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.InterfaceFont.TransparentPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
 <summary>
 We override this sub to draw a red border with 6pt width on this panel.
 </summary>
 <param name="e"></param>
</member>
<member name="M:Qiqi.Reference._FormConfiguration.LiteratureDetailDisplay.MainPanel.GetConfiguration">
 <summary>
 Get the DataTable of this panel
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormMain.GroupTreeView.DefWndProc(System.Windows.Forms.Message@)">
 <summary>
 This sub is used to stop auto expand/collapse on double-click event
 </summary>
 <param name="m"></param>
</member>
<member name="M:Qiqi.Reference._FormMain.GroupTreeView.Me_NodeMouseDoubleClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
 <summary>
 This sub is used to expand/collapse on double-click event except root node
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="T:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.EditMessages">
 <summary>
 Messages
 </summary>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.WndProc(System.Windows.Forms.Message@)">
 <summary>
 This function is used to disable the zoom function
 </summary>
 <param name="m"></param>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.#ctor">
 <summary>
 Construction function
 </summary>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.#ctor(System.String)">
 <summary>
 Construction function with parameter
 </summary>
 <param name="Text"></param>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.InitializeStyle">
 <summary>
 This sub is used to initialize the style of the RichTextBox
 </summary>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.SelectText(System.Int32,System.Int32)">
 <summary>
 This sub 
 </summary>
 <param name="BeginIndex"></param>
 <param name="EndIndex"></param>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.GetFirstVisibleLine">
 <summary>
 This function is used to get the number of the first visible line of the RichTextBox
 </summary>
 <returns></returns>
</member>
<member name="M:Qiqi.Reference._FormMain._LiteratureTabControl.RichTextBox.OnTextChanged(System.EventArgs)">
 <summary>
 Overrides the event TextChanged
 </summary>
 <param name="e"></param>
</member>
<member name="M:Qiqi.Reference._FormMain.DataGridView.#ctor(Qiqi.Reference._FormConfiguration.Configuration)">
 <summary>
 Constructor.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormMain.DataGridView.DisplayRefresh(Qiqi.Reference._FormConfiguration.Configuration)">
 <summary>
 Refresh the columns of DataGridView according to the configuration
 </summary>
 <param name="Configuration"></param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference._FormMain.DataBaseTabPage.#ctor(System.String,Qiqi.Reference._FormConfiguration.Configuration)">
 <summary>
 Constructor with parameter
 </summary>
 <param name="BibTeXFullName">The full name of BibTeX file</param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.OpenRecentDataBase(System.String)">
 <summary>
 MenuFileRecentDataBaseItem is clicked
 </summary>
 <param name="RecentDataBaseFullName">The full name of recent database which is clicked</param>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.InitializeMenuStrip">
 <summary>
 Initialize main menu
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.InitializeToolStrip">
 <summary>
 Initialize tool bar 
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.InitializeStatusStrip">
 <summary>
 Initialize status bar
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.InitialPaperTabControl">
 <summary>
 Initialize paper tab control
 </summary>
 <remarks></remarks>
</member>
<member name="M:Qiqi.Reference.FormMain.DataBaseTabControl_TabPageChanged(System.Object)">
 <summary>
 If the TabPage of DataBaseTabControl has changed, save the current open file into the configuration
 </summary>
 <param name="sender"></param>
 <remarks></remarks>
</member>
<member name="T:Qiqi.Reference.My.Resources.Resources">
<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member>
<member name="P:Qiqi.Reference.My.Resources.Resources.ResourceManager">
<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member>
<member name="P:Qiqi.Reference.My.Resources.Resources.Culture">
<summary>
  使用此强类型资源类，为所有资源查找
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member>
</members>
</doc>
